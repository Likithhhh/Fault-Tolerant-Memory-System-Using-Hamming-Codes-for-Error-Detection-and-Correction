$date
	Tue Dec  3 04:54:39 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! error_detected $end
$var wire 1 " error_corrected $end
$var wire 8 # data_out [7:0] $end
$var reg 4 $ address [3:0] $end
$var reg 8 % data_in [7:0] $end
$var reg 1 & read_enable $end
$var reg 1 ' write_enable $end
$scope module mem_edac $end
$var wire 4 ( address [3:0] $end
$var wire 8 ) data_in [7:0] $end
$var wire 8 * data_out [7:0] $end
$var wire 1 " error_corrected $end
$var wire 1 ! error_detected $end
$var wire 1 & read_enable $end
$var wire 1 ' write_enable $end
$var wire 12 + encoded_data [11:0] $end
$var wire 1 , detected_error $end
$var wire 8 - decoded_data [7:0] $end
$var wire 1 . corrected_error $end
$scope module decoder $end
$var wire 12 / encoded_data [11:0] $end
$var wire 1 0 p1 $end
$var wire 1 1 p2 $end
$var wire 1 2 p4 $end
$var wire 1 3 p8 $end
$var wire 4 4 syndrome [3:0] $end
$var reg 8 5 data_out [7:0] $end
$var reg 1 . error_corrected $end
$var reg 1 , error_detected $end
$upscope $end
$scope module encoder $end
$var wire 8 6 data_in [7:0] $end
$var wire 1 7 p1 $end
$var wire 1 8 p2 $end
$var wire 1 9 p4 $end
$var wire 1 : p8 $end
$var wire 12 ; encoded_data [11:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b10101101000 ;
0:
19
08
07
b10101010 6
bx 5
bx 4
x3
x2
x1
x0
bx /
x.
bx -
x,
b10101101000 +
bx *
b10101010 )
b0 (
0'
0&
b10101010 %
b0 $
bx #
x"
x!
$end
#5
10
11
12
b111 4
03
1"
1.
1!
1,
b10101101000 /
1'
#10
0'
#20
1&
#25
0&
#30
10
01
12
b1101 4
13
b10101 #
b10101 *
b10101 -
b10101 5
b101010101110 /
#35
1&
#40
0&
#45
